name: Deploy Python project to Azure Function App

on:
  push:
    branches:
      - main  # Trigger the workflow on push to the main branch

env:
  AZURE_FUNCTIONAPP_NAME: 'eltScript'   # Set this to your function app name on Azure
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.'  # Set this to the path to your function app project, defaults to the repository root
  PYTHON_VERSION: '3.9'

permissions:
  id-token: write  # Allows the workflow to generate an ID token
  contents: read   # Grant read permission to the repository contents

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: dev

    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v3

    - name: Setup Python ${{ env.PYTHON_VERSION }} Environment
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: 'Resolve Project Dependencies Using Pip'
      shell: bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        python -m pip install --upgrade pip
        pip install -r requirements.txt --target=".python_packages/lib/site-packages"
        popd

    - name: Generate ID Token
      id: generate_id_token
      run: echo "Generated ID token"

    - name: 'Log into Azure'
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        allow-no-subscriptions: true
        federated-token: ${{ steps.generate_id_token.outputs.token }}  # Uses the generated ID token

    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1.5.0
      id: fa
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}

    - name: 'Clean up dependencies'
      shell: bash
      run: |
        rm -rf .python_packages
